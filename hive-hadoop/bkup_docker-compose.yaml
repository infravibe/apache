
services:
  # PostgreSQL Database for Hive Metastore
  postgres:
    image: postgres:13
    platform: linux/amd64
    container_name: hive-postgres
    environment:
      POSTGRES_DB: metastore_db
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hadoop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Hadoop NameNode
  namenode:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: hadoop-namenode
    hostname: namenode
    environment:
      CLUSTER_NAME: hadoop-cluster
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - namenode_data:/opt/hadoop/data/namenode
    ports:
      - "9870:9870"  # NameNode Web UI
      - "9820:9820"  # NameNode RPC
    networks:
      - hadoop-network
    command: ["hdfs", "namenode"]

  # Hadoop DataNode 1
  datanode1:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: hadoop-datanode1
    hostname: datanode1
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - datanode1_data:/opt/hadoop/data/datanode
    ports:
      - "9864:9864"  # DataNode Web UI
    networks:
      - hadoop-network
    depends_on:
      - namenode
    command: ["hdfs", "datanode"]

  # Hadoop DataNode 2
  datanode2:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: hadoop-datanode2
    hostname: datanode2
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - datanode2_data:/opt/hadoop/data/datanode
    ports:
      - "9865:9864"  # DataNode Web UI
    networks:
      - hadoop-network
    depends_on:
      - namenode
    command: ["hdfs", "datanode"]

  # YARN ResourceManager
  resourcemanager:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: yarn-resourcemanager
    hostname: resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - resourcemanager_data:/opt/hadoop/data/yarn
    ports:
      - "8088:8088"  # ResourceManager Web UI
      - "8030:8030"  # ResourceManager Scheduler
      - "8031:8031"  # ResourceManager Resource Tracker
      - "8032:8032"  # ResourceManager Admin
      - "8033:8033"  # ResourceManager Client
    networks:
      - hadoop-network
    depends_on:
      - namenode
      - datanode1
      - datanode2
    command: ["yarn", "resourcemanager"]

  # YARN NodeManager 1
  nodemanager1:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: yarn-nodemanager1
    hostname: nodemanager1
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - nodemanager1_data:/opt/hadoop/data/yarn
    ports:
      - "8042:8042"  # NodeManager Web UI
    networks:
      - hadoop-network
    depends_on:
      - resourcemanager
    command: ["yarn", "nodemanager"]

  # YARN NodeManager 2
  nodemanager2:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: yarn-nodemanager2
    hostname: nodemanager2
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - nodemanager2_data:/opt/hadoop/data/yarn
    ports:
      - "8043:8042"  # NodeManager Web UI
    networks:
      - hadoop-network
    depends_on:
      - resourcemanager
    command: ["yarn", "nodemanager"]

  # MapReduce History Server
  historyserver:
    image: hadoop-fixed:latest
    platform: linux/amd64
    container_name: hadoop-historyserver
    hostname: historyserver
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./conf/hadoop/hadoop.env
    volumes:
      - historyserver_data:/opt/hadoop/data/yarn/timeline
    ports:
      - "8188:8188"  # History Server Web UI
      - "19888:19888" # MapReduce JobHistory Web UI
    networks:
      - hadoop-network
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - resourcemanager
    command: ["mapred", "historyserver"]

  # Hive Metastore
  hive-metastore:
    image: apache/hive:3.1.3
    platform: linux/amd64
    container_name: hive-metastore
    hostname: hive-metastore
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: >-
        -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=hive123
        -Dhive.metastore.warehouse.dir=hdfs://namenode:9000/user/hive/warehouse
        -Dhive.metastore.schema.verification=false
        -Dhive.metastore.schema.verification.record.version=false
        -Dhadoop.proxyuser.hive.hosts=*
        -Dhadoop.proxyuser.hive.groups=*
    volumes:
      - ./postgresql-42.7.4.jar:/opt/hive/lib/postgres.jar
      - hive_warehouse:/opt/hive/data/warehouse
      - ./conf/hive/bkup_hive-site.xml:/opt/hive/conf/bkup_hive-site.xml
      - ./conf/hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./conf/hadoop/hdfs-site.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./conf/hadoop/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
    ports:
      - "9083:9083"  # Metastore Thrift Port
    networks:
      - hadoop-network
    depends_on:
      postgres:
        condition: service_healthy
      namenode:
        condition: service_started
      datanode1:
        condition: service_started
      datanode2:
        condition: service_started

  # Hive Server2
  hiveserver2:
    image: apache/hive:3.1.3
    platform: linux/amd64
    container_name: hive-server2
    hostname: hiveserver2
    environment:
      SERVICE_NAME: hiveserver2
      SERVICE_OPTS: >-
        -Dhive.metastore.uris=thrift://hive-metastore:9083
        -Dhive.metastore.warehouse.dir=hdfs://namenode:9000/user/hive/warehouse
        -Dhive.exec.scratchdir=hdfs://namenode:9000/user/hive/tmp
        -Dhive.querylog.location=hdfs://namenode:9000/user/hive/log
        -Dhive.server2.enable.doAs=false
        -Dhive.security.authorization.enabled=false
        -Dhive.users.in.admin.role=hive
        -Dhive.server2.authentication=NONE
        -Dhive.server2.transport.mode=binary
        -Dhive.server2.thrift.port=10000
        -Dhive.server2.thrift.bind.host=0.0.0.0
        -Dhive.server2.webui.host=0.0.0.0
        -Dhive.server2.webui.port=10002
        -Dhadoop.proxyuser.hive.hosts=*
        -Dhadoop.proxyuser.hive.groups=*
      IS_RESUME: "true"
    volumes:
      - ./postgresql-42.7.4.jar:/opt/hive/lib/postgres.jar
      - hive_warehouse:/opt/hive/data/warehouse
      - ./conf/hive/bkup_hive-site.xml:/opt/hive/conf/bkup_hive-site.xml
      - ./conf/hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./conf/hadoop/hdfs-site.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./conf/hadoop/yarn-site.xml:/opt/hadoop/etc/hadoop/yarn-site.xml
      - ./conf/hadoop/mapred-site.xml:/opt/hadoop/etc/hadoop/mapred-site.xml
    ports:
      - "10000:10000"  # HiveServer2 Thrift Port
      - "10002:10002"  # HiveServer2 Web UI
    networks:
      - hadoop-network
    depends_on:
      - hive-metastore
      - namenode
      - datanode1
      - datanode2
      - resourcemanager

  # Hive Beeline Client (Optional - for testing)
  hive-client:
    image: apache/hive:3.1.3
    platform: linux/amd64
    container_name: hive-client
    hostname: hive-client
    environment:
      SERVICE_NAME: beeline
    volumes:
      - ./conf/hive/bkup_hive-site.xml:/opt/hive/conf/bkup_hive-site.xml
      - ./conf/hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./conf/hadoop/hdfs-site.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
    networks:
      - hadoop-network
    depends_on:
      - hiveserver2
    stdin_open: true
    tty: true
    command: ["tail", "-f", "/dev/null"]

  # Zookeeper (for coordination services)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    platform: linux/amd64
    container_name: hadoop-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    networks:
      - hadoop-network

volumes:
  postgres_data:
    driver: local
  namenode_data:
    driver: local
  datanode1_data:
    driver: local
  datanode2_data:
    driver: local
  resourcemanager_data:
    driver: local
  nodemanager1_data:
    driver: local
  nodemanager2_data:
    driver: local
  historyserver_data:
    driver: local
  hive_warehouse:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local

networks:
  hadoop-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16
