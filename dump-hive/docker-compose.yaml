services:
  # --- PostgreSQL Database for Hive Metastore ---
  postgres:
    image: postgres:13
    platform: linux/amd64
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - apache
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U hive -d metastore" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Hive Metastore ---
  hive-metastore:
    image: apache/hive:4.0.0 # Using the version you specified
    platform: linux/amd64
    hostname: hive-metastore
    container_name: hive-metastore
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: >-
        -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=hive
        -Dhive.metastore.schema.verification=false
        -Ddatanucleus.schema.autoCreateTables=true
        -Dhive.metastore.warehouse.dir=hdfs://namenode:9820/user/hive/warehouse
        -Dfs.defaultFS=hdfs://namenode:9820
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop # Ensure Hive picks up Hadoop configs
    volumes:
      # IMPORTANT: Replace /path/to/your/postgresql-42.7.3.jar with the actual path to your downloaded PostgreSQL JDBC driver JAR
      - ./conf/postgres/postgresql-42.7.4.jar:/opt/hive/lib/postgres.jar:ro
      - ./conf/hadoop:/opt/hadoop/etc/hadoop:ro # Mount Hadoop and Hive configs
      - ./conf/hive/bkup_hive-site.xml:/opt/hive/conf/hive-site.xml:ro # Explicitly mount bkup_hive-site.xml
#      - hive_warehouse:/opt/hive/warehouse # Recommended by docs, actual data on HDFS
    ports:
      - "9083:9083"
    networks:
      - apache
    healthcheck:
      test: [ "CMD-SHELL", "netstat -tlnp | grep 9083 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # --- HiveServer2 ---
  hiveserver2:
    image: apache/hive:4.0.0 # Using the version you specified
    platform: linux/amd64
    hostname: hiveserver2
    container_name: hiveserver2
    depends_on:
      hive-metastore:
        condition: service_started # Or add a healthcheck to metastore
    environment:
      SERVICE_NAME: hiveserver2
      HIVE_METASTORE_URIS: thrift://hive-metastore:9083 # Overriding SERVICE_OPTS for clarity
      SERVICE_OPTS: >-
        -Dhive.metastore.uris=thrift://hive-metastore:9083
        -Dhive.server2.thrift.bind.host=0.0.0.0
        -Dhive.server2.thrift.port=10000
        -Dhive.server2.webui.host=0.0.0.0
        -Dhive.server2.webui.port=10002
        -Dhive.server2.webui.enable=true
        -Dhive.server2.enable.doAs=false
        -Dhive.server2.authentication=NONE
        -Dhive.server2.transport.mode=binary
        -Dhadoop.proxyuser.hive.hosts=*
        -Dhadoop.proxyuser.hive.groups=*
        -Dhive.metastore.warehouse.dir=hdfs://namenode:9820/user/hive/warehouse
        -Dfs.defaultFS=hdfs://namenode:9820
        -Dhive.execution.engine=mr
      IS_RESUME: "true" # For remote metastore
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop # Ensure Hive picks up Hadoop configs
    volumes:
      # IMPORTANT: Replace /path/to/your/postgresql-42.7.3.jar with the actual path to your downloaded PostgreSQL JDBC driver JAR
      - ./conf/postgres/postgresql-42.7.4.jar:/opt/hive/lib/postgres.jar:ro
      - ./conf/hadoop:/opt/hadoop/etc/hadoop:ro # Mount Hadoop and Hive configs
      - ./conf/hive/bkup_hive-site.xml:/opt/hive/conf/hive-site.xml:ro # Explicitly mount bkup_hive-site.xml
#      - hive_warehouse:/opt/hive/warehouse # For table data (actual data on HDFS)
    ports:
      - "10000:10000" # HiveServer2 JDBC
      - "10002:10002" # HiveServer2 Web UI
    networks:
      - apache
    healthcheck:
      test: [ "CMD-SHELL", "netstat -tlnp | grep 10000 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

volumes:
  postgres_data:
  hive_warehouse:

networks:
  apache:
    external: true
    name: apache